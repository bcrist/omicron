#!!--[[ bengine build script ]] include('build/configure', 'vc_win', 'release') !! 1983 ##
# ################# !! GENERATED CODE -- DO NOT MODIFY !! ################# ##
ninja_required_version = 1.5

bin_dir = bin
build_dir = build
deps_dir = deps
ext_include_dir = ext_include
ext_lib_dir = ext_lib
include_dir = include
msvc_build_dir = msvc_build
msvc_debug_dir = Debug
msvc_ipch_dir = ipch
msvc_out_dir = msvc_out
out_dir = out
stage_dir = stage

cl_base_defines = /DSYSTEM_WINDOWS /DWIN32 /D_WIN32 /D_WIN32_WINNT=0x0601 /D_WINDOWS
cl_base_flags = /nologo /c /showIncludes /utf-8 /FS /Gd /Gm- /Gy /GF /Zi /EHs /fp:precise /volatile:iso /w44746 /Qpar /Zc:rvalueCast /diagnostics:column
cl_flags_c_extlib_release = /TC /GR- /GA /W3 /Zm120 /Ox /MD /GL /GS- /wd4267 /wd4334 /DBOOST_NO_RTTI /DBOOST_NO_TYPEID /DNDEBUG /D_CRT_SECURE_NO_WARNINGS /D_SCL_SECURE_NO_WARNINGS
cl_flags_cxx_extlib_release = /TP /GR- /GA /W3 /Zm120 /Ox /MD /GL /GS- /wd4267 /wd4334 /DBOOST_NO_RTTI /DBOOST_NO_TYPEID /DNDEBUG /D_CRT_SECURE_NO_WARNINGS /D_SCL_SECURE_NO_WARNINGS
cl_flags_lib_release = /GR- /GA /std:c++latest /permissive- /W4 /w15038 /WX /Ox /MD /GL /GS- /wd4065 /wd4100 /wd4201 /wd4310 /wd4324 /wd4458 /wd4503 /wd5030 /DBE_ID_EXTERNS /DBE_NO_LEAKCHECK /DBE_STATIC_LIB /DBOOST_NO_RTTI /DBOOST_NO_TYPEID /DGLM_ENABLE_EXPERIMENTAL /DGLM_FORCE_SSE3 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DNDEBUG /DNOMINMAX /DSQLITE_WIN32_GETVERSIONEX=0 /D_HAS_AUTO_PTR_ETC=1
cl_flags_perf_release = /GR- /GA /Gw /Zc:inline /std:c++latest /permissive- /W4 /w15038 /WX /Ox /MD /GL /GS- /wd4065 /wd4100 /wd4201 /wd4310 /wd4324 /wd4458 /wd4503 /wd4702 /wd5030 /DBE_ID_EXTERNS /DBE_NO_LEAKCHECK /DBE_TEST_PERF /DBOOST_NO_RTTI /DBOOST_NO_TYPEID /DGLM_ENABLE_EXPERIMENTAL /DGLM_FORCE_SSE3 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DNDEBUG /DNOMINMAX /DSQLITE_WIN32_GETVERSIONEX=0 /D_HAS_AUTO_PTR_ETC=1
cl_flags_release = /GR- /GA /Gw /Zc:inline /std:c++latest /permissive- /W4 /w15038 /WX /Ox /MD /GL /GS- /wd4065 /wd4100 /wd4201 /wd4310 /wd4324 /wd4458 /wd4503 /wd5030 /DBE_ID_EXTERNS /DBE_NO_LEAKCHECK /DBOOST_NO_RTTI /DBOOST_NO_TYPEID /DGLM_ENABLE_EXPERIMENTAL /DGLM_FORCE_SSE3 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DNDEBUG /DNOMINMAX /DSQLITE_WIN32_GETVERSIONEX=0 /D_HAS_AUTO_PTR_ETC=1
cl_flags_test_release = /GR- /GA /Gw /Zc:inline /std:c++latest /permissive- /W4 /w15038 /WX /Ox /MD /GL /GS- /wd4065 /wd4100 /wd4201 /wd4310 /wd4324 /wd4458 /wd4503 /wd4702 /wd5030 /DBE_ID_EXTERNS /DBE_NO_LEAKCHECK /DBE_TEST /DBOOST_NO_RTTI /DBOOST_NO_TYPEID /DGLM_ENABLE_EXPERIMENTAL /DGLM_FORCE_SSE3 /DGSL_UNENFORCED_ON_CONTRACT_VIOLATION /DNDEBUG /DNOMINMAX /DSQLITE_WIN32_GETVERSIONEX=0 /D_HAS_AUTO_PTR_ETC=1

lib_base_flags = /NOLOGO /MACHINE:X64
lib_flags_extlib_release = /LTCG /IGNORE:4221
lib_flags_release = /WX /LTCG /IGNORE:4221

link_base_flags = /NOLOGO /MACHINE:X64 /DYNAMICBASE /NXCOMPAT /LIBPATH:"$ext_lib_dir" /MANIFEST:NO
link_base_libs = kernel32.lib user32.lib gdi32.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib
link_flags_console_release = /SUBSYSTEM:CONSOLE /LIBPATH:"$out_dir" /WX /DEBUG /LTCG /OPT:REF,ICF /IGNORE:4221


rule ninjatool
   command = ninja -f $file -t $tool $extra
   description = ninja -t $tool

rule limp
   command = limp --depfile "$build_dir\$out.d" -f $out
   depfile = $build_dir\$out.d
   deps = gcc
   description = limp $out
   generator = true
   restat = true

rule limpin
   command = limp -f $in
   description = limp $in
   generator = true

rule run
   command = $cmd $extra
   description = $cmd

rule mkdir
   command = cmd /s /c "if not exist "$out" md "$out""
   description = mkdir $out
   generator = true

rule putfile
   command = cmd /s /c "(echo:$contents)>"$out""
   description = putfile $out

rule cp
   command = cmd /s /c "copy /Y /B "$in" "$out" /B >nul"
   description = cp $out

rule rmdir
   command = cmd /s /c "if exist "$path" rd /Q /S "$path""
   description = rm $path

rule rmfile
   command = cmd /s /c "if exist "$path" del /F /Q "$path""
   description = rm $path

rule rmfiles
   command = cmd /s /c "del /F /Q $paths >nul 2>&1 || echo. >nul"
   description = rm $paths

rule lndir
   command = cmd /s /c "if not exist "$out" mklink /J "$out" "$in" >nul"
   description = ln $out
   generator = true
   restat = true

rule cl
   command = cl $cl_base_flags $flags $cl_base_defines $extra /I"$include_dir" /I"$deps_dir" /I"$ext_include_dir" /Fo"$out" /Fd"$pdb" "$in"
   deps = msvc
   description = cl $in

rule rc
   command = rc /nologo $extra /I"$include_dir" /I"$deps_dir" /I"$ext_include_dir" /fo"$out" "$in"
   deps = msvc
   description = rc $in

rule lib
   command = lib $lib_base_flags $flags $extra /OUT:"$out" @$build_dir\${out_file}.in
   description = lib $out
   rspfile = $build_dir\${out_file}.in
   rspfile_content = $in_newline

rule link
   command = link $link_base_flags $flags $extra /PDB:"$pdb" /OUT:"$out" @$build_dir\${out_file}.in
   description = link $out
   rspfile = $build_dir\${out_file}.in
   rspfile_content = $link_base_libs $in_newline

rule build_boost
   command = cmd /s /c "call build_boost.cmd"
   description = build_boost
   generator = true
   rspfile = build_boost.cmd
   rspfile_content = (if not exist build md build) & $
pushd "%BOOST_HOME%" & $
(if not exist b2.exe call bootstrap.bat) & $
((.\b2.exe "--stagedir=%~dp0$ext_lib_dir" "--build-dir=%~dp0$build_dir" $
--build-type=complete -d1 -j4 --with-system --with-locale $
define=BOOST_NO_RTTI define=BOOST_NO_TYPEID link=static threading=multi runtime-link=shared address-model=64 $
stage > "%~dp0$build_dir\.boost_log" 2>&1 ) && $
(move /Y "%~dp0$ext_lib_dir\lib\*.lib" "%~dp0$ext_lib_dir" && $
rd /Q /S "%~dp0$ext_lib_dir\lib" ) >nul ) & popd

rule configure
   command = limp -f release.ninja
   description = configure
   generator = true

rule ragel
   command = ragel $flags -o $out $in
   description = ragel $out
   generator = true
   restat = true

build configure!: configure
build $out_dir: mkdir
build $include_dir: mkdir
build $stage_dir: mkdir
build $bin_dir: mkdir
build $deps_dir: mkdir
build $ext_include_dir: mkdir
build $ext_lib_dir: mkdir
build $ext_include_dir\glm: lndir dep_modules\glm\glm | $ext_include_dir
build $ext_include_dir\gsl: lndir dep_modules\gsl\gsl | $ext_include_dir
build $ext_include_dir\glfw: lndir dep_modules\glfw\include\GLFW | $ext_include_dir
build $ext_include_dir\GL: lndir dep_modules\glew\include\GL | $ext_include_dir
build $ext_include_dir\pugixml: lndir dep_modules\pugixml\src | $ext_include_dir
build $ext_include_dir\catch: lndir dep_modules\catch\single_include | $ext_include_dir
build $ext_include_dir\lua: lndir dep_modules\lua | $ext_include_dir
build $ext_include_dir\stb: lndir dep_modules\stb | $ext_include_dir
build $ext_include_dir\zlib: lndir dep_modules\zlib | $ext_include_dir
build $include_dir\be: mkdir | $include_dir
build $include_dir\be\belua: lndir modules\belua\include || $include_dir\be
build $include_dir\be\blt: lndir modules\blt\include || $include_dir\be
build $include_dir\be\cli: lndir modules\cli\include || $include_dir\be
build $include_dir\be\core: lndir modules\core\include || $include_dir\be
build $include_dir\be\ctable: lndir modules\ctable\include || $include_dir\be
build $include_dir\be\perf: lndir modules\perf\include || $include_dir\be
build $include_dir\be\platform: lndir modules\platform\include || $include_dir\be
build $include_dir\be\sqlite: lndir modules\sqlite\include || $include_dir\be
build $include_dir\be\testing: lndir modules\testing\include || $include_dir\be
build $include_dir\be\util: lndir modules\util\include || $include_dir\be
build init_include_links!: phony $include_dir\be\belua $include_dir\be\blt $include_dir\be\cli $include_dir\be\core $include_dir\be\ctable $include_dir\be\perf $include_dir\be\platform $include_dir\be\sqlite $include_dir\be\testing $include_dir\be\util
build $build_dir\.boost_log: build_boost
build %BOOST_HOME%\boost: phony || $build_dir\.boost_log
build $ext_include_dir\boost: lndir %BOOST_HOME%\boost | $ext_include_dir

build $build_dir\.i9d: putfile || $out_dir $include_dir $stage_dir $bin_dir $deps_dir $ext_include_dir $ext_lib_dir $ext_include_dir\glm $ext_include_dir\gsl $ext_include_dir\glfw $ext_include_dir\GL $ext_include_dir\pugixml $ext_include_dir\catch $ext_include_dir\lua $ext_include_dir\stb $ext_include_dir\zlib $include_dir\be init_include_links! $ext_include_dir\boost
   contents = .
build init!: phony $build_dir\.i9d

build clean-ninja!: ninjatool
   tool = clean
   file = release.ninja

build clean-rm-out_dir!: rmfiles | clean-ninja!
   paths = $out_dir\*.*

build clean-rm-pch!: rmfiles
   paths = $build_dir\*.pch

build clean-rm-pdb!: rmfiles
   paths = $build_dir\*.pdb
build clean!: phony clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!

build rm_build_dir!: rmdir | clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!
   path = $build_dir

build rm_out_dir!: rmdir | clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!
   path = $out_dir

build rm_include_dir!: rmdir | clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!
   path = $include_dir

build rm_ext_include_dir!: rmdir | clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!
   path = $ext_include_dir

build rm_ext_lib_dir!: rmdir | clean-ninja! clean-rm-out_dir! clean-rm-pch! clean-rm-pdb!
   path = $ext_lib_dir

build rm_msvc_build_dir!: rmdir
   path = $msvc_build_dir

build rm_msvc_out_dir!: rmdir
   path = $msvc_out_dir

build rm_msvc_ipch_dir!: rmdir
   path = $msvc_ipch_dir

build rm_msvc_debug_dir!: rmdir
   path = $msvc_debug_dir

build rm_msvc_db!: rmfile
   path = msvc.VC.db

build rm_vscode_db!: rmfile
   path = .vscode\.browse.VC.db
build deinit!: phony rm_build_dir! rm_out_dir! rm_include_dir! rm_ext_include_dir! rm_ext_lib_dir! rm_msvc_build_dir! rm_msvc_out_dir! rm_msvc_ipch_dir! rm_msvc_debug_dir! rm_msvc_db! rm_vscode_db!

build $build_dir\release\zlib-static\adler32.obj: cl dep_modules\zlib\adler32.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\crc32.obj: cl dep_modules\zlib\crc32.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\deflate.obj: cl dep_modules\zlib\deflate.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\infback.obj: cl dep_modules\zlib\infback.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\inffast.obj: cl dep_modules\zlib\inffast.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\inflate.obj: cl dep_modules\zlib\inflate.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\inftrees.obj: cl dep_modules\zlib\inftrees.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\trees.obj: cl dep_modules\zlib\trees.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $build_dir\release\zlib-static\zutil.obj: cl dep_modules\zlib\zutil.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\zlib-static.pdb
   extra = /DNO_FSEEKO /DZLIB_CONST /DZ_SOLO /D_CRT_NONSTDC_NO_DEPRECATE /D_CRT_SECURE_NO_DEPRECATE

build $ext_lib_dir\zlib-static.lib: lib $build_dir\release\zlib-static\adler32.obj $build_dir\release\zlib-static\crc32.obj $build_dir\release\zlib-static\deflate.obj $build_dir\release\zlib-static\infback.obj $build_dir\release\zlib-static\inffast.obj $build_dir\release\zlib-static\inflate.obj $build_dir\release\zlib-static\inftrees.obj $build_dir\release\zlib-static\trees.obj $build_dir\release\zlib-static\zutil.obj || init!
   out_file = zlib-static.lib
   flags = $lib_flags_extlib_release
build project-zlib-static-release!: phony $ext_lib_dir\zlib-static.lib
build project-zlib-static!: phony project-zlib-static-release!

build $build_dir\release\glew\src\glew.obj: cl dep_modules\glew\src\glew.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glew.pdb
   extra = /DGLEW_NO_GLU /DGLEW_STATIC /I"dep_modules\glew\include" /I"include"

build $ext_lib_dir\glew.lib: lib $build_dir\release\glew\src\glew.obj || init!
   out_file = glew.lib
   flags = $lib_flags_extlib_release
build project-glew-release!: phony $ext_lib_dir\glew.lib
build project-glew!: phony project-glew-release!

build $build_dir\release\glfw\src\context.obj: cl dep_modules\glfw\src\context.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\init.obj: cl dep_modules\glfw\src\init.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\input.obj: cl dep_modules\glfw\src\input.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\monitor.obj: cl dep_modules\glfw\src\monitor.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\vulkan.obj: cl dep_modules\glfw\src\vulkan.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\window.obj: cl dep_modules\glfw\src\window.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\egl_context.obj: cl dep_modules\glfw\src\egl_context.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\wgl_context.obj: cl dep_modules\glfw\src\wgl_context.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\win32_init.obj: cl dep_modules\glfw\src\win32_init.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\win32_joystick.obj: cl dep_modules\glfw\src\win32_joystick.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\win32_monitor.obj: cl dep_modules\glfw\src\win32_monitor.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\win32_time.obj: cl dep_modules\glfw\src\win32_time.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\win32_tls.obj: cl dep_modules\glfw\src\win32_tls.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $build_dir\release\glfw\src\win32_window.obj: cl dep_modules\glfw\src\win32_window.c || init!
   flags = $cl_flags_c_extlib_release
   pdb = $build_dir\glfw.pdb
   extra = /D_GLFW_WIN32 /I"dep_modules\glfw\include" /I"include"

build $ext_lib_dir\glfw.lib: lib $build_dir\release\glfw\src\context.obj $build_dir\release\glfw\src\init.obj $build_dir\release\glfw\src\input.obj $build_dir\release\glfw\src\monitor.obj $build_dir\release\glfw\src\vulkan.obj $build_dir\release\glfw\src\window.obj $build_dir\release\glfw\src\egl_context.obj $build_dir\release\glfw\src\wgl_context.obj $build_dir\release\glfw\src\win32_init.obj $build_dir\release\glfw\src\win32_joystick.obj $build_dir\release\glfw\src\win32_monitor.obj $build_dir\release\glfw\src\win32_time.obj $build_dir\release\glfw\src\win32_tls.obj $build_dir\release\glfw\src\win32_window.obj || init!
   out_file = glfw.lib
   flags = $lib_flags_extlib_release
build project-glfw-release!: phony $ext_lib_dir\glfw.lib
build project-glfw!: phony project-glfw-release!

build $build_dir\release\luaxx\lapi.obj: cl dep_modules\lua\lapi.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lauxlib.obj: cl dep_modules\lua\lauxlib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lbaselib.obj: cl dep_modules\lua\lbaselib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lbitlib.obj: cl dep_modules\lua\lbitlib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lcode.obj: cl dep_modules\lua\lcode.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lcorolib.obj: cl dep_modules\lua\lcorolib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lctype.obj: cl dep_modules\lua\lctype.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ldblib.obj: cl dep_modules\lua\ldblib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ldebug.obj: cl dep_modules\lua\ldebug.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ldo.obj: cl dep_modules\lua\ldo.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ldump.obj: cl dep_modules\lua\ldump.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lfunc.obj: cl dep_modules\lua\lfunc.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lgc.obj: cl dep_modules\lua\lgc.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\linit.obj: cl dep_modules\lua\linit.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\liolib.obj: cl dep_modules\lua\liolib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\llex.obj: cl dep_modules\lua\llex.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lmathlib.obj: cl dep_modules\lua\lmathlib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lmem.obj: cl dep_modules\lua\lmem.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\loadlib.obj: cl dep_modules\lua\loadlib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lobject.obj: cl dep_modules\lua\lobject.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lopcodes.obj: cl dep_modules\lua\lopcodes.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\loslib.obj: cl dep_modules\lua\loslib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lparser.obj: cl dep_modules\lua\lparser.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lstate.obj: cl dep_modules\lua\lstate.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lstring.obj: cl dep_modules\lua\lstring.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lstrlib.obj: cl dep_modules\lua\lstrlib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ltable.obj: cl dep_modules\lua\ltable.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ltablib.obj: cl dep_modules\lua\ltablib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ltests.obj: cl dep_modules\lua\ltests.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\ltm.obj: cl dep_modules\lua\ltm.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lundump.obj: cl dep_modules\lua\lundump.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lutf8lib.obj: cl dep_modules\lua\lutf8lib.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lvm.obj: cl dep_modules\lua\lvm.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $build_dir\release\luaxx\lzio.obj: cl dep_modules\lua\lzio.c || init!
   flags = $cl_flags_cxx_extlib_release
   pdb = $build_dir\luaxx.pdb

build $ext_lib_dir\luaxx.lib: lib $build_dir\release\luaxx\lapi.obj $build_dir\release\luaxx\lauxlib.obj $build_dir\release\luaxx\lbaselib.obj $build_dir\release\luaxx\lbitlib.obj $build_dir\release\luaxx\lcode.obj $build_dir\release\luaxx\lcorolib.obj $build_dir\release\luaxx\lctype.obj $build_dir\release\luaxx\ldblib.obj $build_dir\release\luaxx\ldebug.obj $build_dir\release\luaxx\ldo.obj $build_dir\release\luaxx\ldump.obj $build_dir\release\luaxx\lfunc.obj $build_dir\release\luaxx\lgc.obj $build_dir\release\luaxx\linit.obj $build_dir\release\luaxx\liolib.obj $build_dir\release\luaxx\llex.obj $build_dir\release\luaxx\lmathlib.obj $build_dir\release\luaxx\lmem.obj $build_dir\release\luaxx\loadlib.obj $build_dir\release\luaxx\lobject.obj $build_dir\release\luaxx\lopcodes.obj $build_dir\release\luaxx\loslib.obj $build_dir\release\luaxx\lparser.obj $build_dir\release\luaxx\lstate.obj $build_dir\release\luaxx\lstring.obj $build_dir\release\luaxx\lstrlib.obj $build_dir\release\luaxx\ltable.obj $build_dir\release\luaxx\ltablib.obj $build_dir\release\luaxx\ltests.obj $build_dir\release\luaxx\ltm.obj $build_dir\release\luaxx\lundump.obj $build_dir\release\luaxx\lutf8lib.obj $build_dir\release\luaxx\lvm.obj $build_dir\release\luaxx\lzio.obj || init!
   out_file = luaxx.lib
   flags = $lib_flags_extlib_release
build project-luaxx-release!: phony $ext_lib_dir\luaxx.lib
build project-luaxx!: phony project-luaxx-release!
build group-deps-release!: phony project-zlib-static-release! project-glew-release! project-glfw-release! project-luaxx-release!
build group-deps!: phony project-zlib-static! project-glew! project-glfw! project-luaxx!
build modules\belua\include\result_code.hpp: limp
build modules\belua\include\result_code.hpp!: limpin modules\belua\include\result_code.hpp
build modules\belua\include\version.hpp: limp
build modules\belua\include\version.hpp!: limpin modules\belua\include\version.hpp
build modules\belua\src\result_code.cpp: limp
build modules\belua\src\result_code.cpp!: limpin modules\belua\src\result_code.cpp

build $build_dir\release\belua\src\context.obj: cl modules\belua\src\context.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\belua.pdb
   extra = /DBE_BELUA_IMPL /DBE_TARGET=belua /DBE_TARGET_BASE=belua /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\belua\include"

build $build_dir\release\belua\src\log_exception.obj: cl modules\belua\src\log_exception.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\belua.pdb
   extra = /DBE_BELUA_IMPL /DBE_TARGET=belua /DBE_TARGET_BASE=belua /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\belua\include"

build $build_dir\release\belua\src\lua_error.obj: cl modules\belua\src\lua_error.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\belua.pdb
   extra = /DBE_BELUA_IMPL /DBE_TARGET=belua /DBE_TARGET_BASE=belua /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\belua\include"

build $build_dir\release\belua\src\lua_helpers.obj: cl modules\belua\src\lua_helpers.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\belua.pdb
   extra = /DBE_BELUA_IMPL /DBE_TARGET=belua /DBE_TARGET_BASE=belua /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\belua\include"

build $build_dir\release\belua\src\open_module.obj: cl modules\belua\src\open_module.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\belua.pdb
   extra = /DBE_BELUA_IMPL /DBE_TARGET=belua /DBE_TARGET_BASE=belua /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\belua\include"

build $build_dir\release\belua\src\result_code.obj: cl modules\belua\src\result_code.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\belua.pdb
   extra = /DBE_BELUA_IMPL /DBE_TARGET=belua /DBE_TARGET_BASE=belua /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\belua\include"

build $out_dir\belua.lib: lib $build_dir\release\belua\src\context.obj $build_dir\release\belua\src\log_exception.obj $build_dir\release\belua\src\lua_error.obj $build_dir\release\belua\src\lua_helpers.obj $build_dir\release\belua\src\open_module.obj $build_dir\release\belua\src\result_code.obj || init!
   out_file = belua.lib
   flags = $lib_flags_release
build project-belua-release!: phony $out_dir\belua.lib
build project-belua!: phony project-belua-release!
build group-belua-release!: phony project-belua-release!
build group-belua!: phony project-belua!
build modules\blt\include\version.hpp: limp
build modules\blt\include\version.hpp!: limpin modules\blt\include\version.hpp

build modules\blt\src\lexer.cpp: ragel modules\blt\meta\lexer.rl
   flags = -s -C -L -G2

build $build_dir\release\blt\src\pch.obj: cl modules\blt\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt.pdb
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yc"pch.hpp"
build $build_dir\blt.pch: phony $build_dir\release\blt\src\pch.obj

build $build_dir\release\blt\src\blt.obj: cl modules\blt\src\blt.cpp | $build_dir\blt.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt.pdb
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\lexer.obj: cl modules\blt\src\lexer.cpp | $build_dir\blt.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt.pdb
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\parser.obj: cl modules\blt\src\parser.cpp | $build_dir\blt.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt.pdb
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\token_data.obj: cl modules\blt\src\token_data.cpp | $build_dir\blt.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt.pdb
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $build_dir\release\blt\src\token_type.obj: cl modules\blt\src\token_type.cpp | $build_dir\blt.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt.pdb
   extra = /DBE_BLT_IMPL /DBE_TARGET=blt /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include" /Fp"$build_dir\blt.pch" /Yu"pch.hpp"

build $out_dir\blt.lib: lib $build_dir\release\blt\src\pch.obj $build_dir\release\blt\src\blt.obj $build_dir\release\blt\src\lexer.obj $build_dir\release\blt\src\parser.obj $build_dir\release\blt\src\token_data.obj $build_dir\release\blt\src\token_type.obj || init!
   out_file = blt.lib
   flags = $lib_flags_release
build project-blt-release!: phony $out_dir\blt.lib
build project-blt!: phony project-blt-release!
build modules\blt\src-lua\lua_blt.cpp: limp
build modules\blt\src-lua\lua_blt.cpp!: limpin modules\blt\src-lua\lua_blt.cpp

build $build_dir\release\blt-lua\src-lua\lua_blt.obj: cl modules\blt\src-lua\lua_blt.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt-lua.pdb
   extra = /DBE_BLT_LUA_IMPL /DBE_TARGET=blt-lua /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include"

build $build_dir\release\blt-lua\src-lua\lua_blt_debug.obj: cl modules\blt\src-lua\lua_blt_debug.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\blt-lua.pdb
   extra = /DBE_BLT_LUA_IMPL /DBE_TARGET=blt-lua /DBE_TARGET_BASE=blt /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\blt\include"

build $out_dir\blt-lua.lib: lib $build_dir\release\blt-lua\src-lua\lua_blt.obj $build_dir\release\blt-lua\src-lua\lua_blt_debug.obj || init!
   out_file = blt-lua.lib
   flags = $lib_flags_release
build project-blt-lua-release!: phony $out_dir\blt-lua.lib
build project-blt-lua!: phony project-blt-lua-release!
build group-blt-release!: phony project-blt-release! project-blt-lua-release!
build group-blt!: phony project-blt! project-blt-lua!
build modules\cli\include\section_ids.hpp: limp
build modules\cli\include\section_ids.hpp!: limpin modules\cli\include\section_ids.hpp
build modules\cli\include\version.hpp: limp
build modules\cli\include\version.hpp!: limpin modules\cli\include\version.hpp

build $build_dir\release\cli\src\pch.obj: cl modules\cli\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yc"pch.hpp"
build $build_dir\cli.pch: phony $build_dir\release\cli\src\pch.obj

build $build_dir\release\cli\src\app_name.obj: cl modules\cli\src\app_name.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\argument_error.obj: cl modules\cli\src\argument_error.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\default_option_parser.obj: cl modules\cli\src\default_option_parser.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\describe_config.obj: cl modules\cli\src\describe_config.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\handler_context.obj: cl modules\cli\src\handler_context.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\ids.obj: cl modules\cli\src\ids.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\log_exception.obj: cl modules\cli\src\log_exception.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\option_error.obj: cl modules\cli\src\option_error.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\processor.obj: cl modules\cli\src\processor.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\verbosity_param.obj: cl modules\cli\src\verbosity_param.cpp | $build_dir\cli.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include" /Fp"$build_dir\cli.pch" /Yu"pch.hpp"

build $build_dir\release\cli\src\native\vc_win\escape_cli_arg.obj: cl modules\cli\src\native\vc_win\escape_cli_arg.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\cli.pdb
   extra = /DBE_CLI_IMPL /DBE_TARGET=cli /DBE_TARGET_BASE=cli /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\cli\include"

build $out_dir\cli.lib: lib $build_dir\release\cli\src\pch.obj $build_dir\release\cli\src\app_name.obj $build_dir\release\cli\src\argument_error.obj $build_dir\release\cli\src\default_option_parser.obj $build_dir\release\cli\src\describe_config.obj $build_dir\release\cli\src\handler_context.obj $build_dir\release\cli\src\ids.obj $build_dir\release\cli\src\log_exception.obj $build_dir\release\cli\src\option_error.obj $build_dir\release\cli\src\processor.obj $build_dir\release\cli\src\verbosity_param.obj $build_dir\release\cli\src\native\vc_win\escape_cli_arg.obj || init!
   out_file = cli.lib
   flags = $lib_flags_release
build project-cli-release!: phony $out_dir\cli.lib
build project-cli!: phony project-cli-release!
build group-cli-release!: phony project-cli-release!
build group-cli!: phony project-cli!
build modules\core\include\log_attrib_ids.hpp: limp
build modules\core\include\log_attrib_ids.hpp!: limpin modules\core\include\log_attrib_ids.hpp
build modules\core\include\service_ids.hpp: limp
build modules\core\include\service_ids.hpp!: limpin modules\core\include\service_ids.hpp
build modules\core\include\version.hpp: limp
build modules\core\include\version.hpp!: limpin modules\core\include\version.hpp

build $build_dir\release\core\src\pch.obj: cl modules\core\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yc"pch.hpp"
build $build_dir\core.pch: phony $build_dir\release\core\src\pch.obj

build $build_dir\release\core\src\a3_vmm_alloc.obj: cl modules\core\src\a3_vmm_alloc.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\alg.obj: cl modules\core\src\alg.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\console_color.obj: cl modules\core\src\console_color.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\console_indent.obj: cl modules\core\src\console_indent.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\console_log_sink.obj: cl modules\core\src\console_log_sink.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\default_log.obj: cl modules\core\src\default_log.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\exceptions.obj: cl modules\core\src\exceptions.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\filesystem.obj: cl modules\core\src\filesystem.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\id_collision_handler.obj: cl modules\core\src\id_collision_handler.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\ids.obj: cl modules\core\src\ids.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\io_service_thread_pool.obj: cl modules\core\src\io_service_thread_pool.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\lifecycle.obj: cl modules\core\src\lifecycle.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log.obj: cl modules\core\src\log.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log_exception.obj: cl modules\core\src\log_exception.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log_expr_ops.obj: cl modules\core\src\log_expr_ops.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\log_processor.obj: cl modules\core\src\log_processor.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_io_service.obj: cl modules\core\src\service_io_service.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_io_service_thread_pool.obj: cl modules\core\src\service_io_service_thread_pool.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\service_simple_single_thread_executor.obj: cl modules\core\src\service_simple_single_thread_executor.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\stack_trace.obj: cl modules\core\src\stack_trace.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\time.obj: cl modules\core\src\time.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\void_log.obj: cl modules\core\src\void_log.cpp | $build_dir\core.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include" /Fp"$build_dir\core.pch" /Yu"pch.hpp"

build $build_dir\release\core\src\native\vc_win\builtins.obj: cl modules\core\src\native\vc_win\builtins.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\console.obj: cl modules\core\src\native\vc_win\console.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\console_color.obj: cl modules\core\src\native\vc_win\console_color.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\lifecycle.obj: cl modules\core\src\native\vc_win\lifecycle.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\memory.obj: cl modules\core\src\native\vc_win\memory.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\memory_status.obj: cl modules\core\src\native\vc_win\memory_status.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\native.obj: cl modules\core\src\native\vc_win\native.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\stack_trace.obj: cl modules\core\src\native\vc_win\stack_trace.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core\src\native\vc_win\time.obj: cl modules\core\src\native\vc_win\time.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core.pdb
   extra = /DBE_CORE_IMPL /DBE_TARGET=core /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $out_dir\core.lib: lib $build_dir\release\core\src\pch.obj $build_dir\release\core\src\a3_vmm_alloc.obj $build_dir\release\core\src\alg.obj $build_dir\release\core\src\console_color.obj $build_dir\release\core\src\console_indent.obj $build_dir\release\core\src\console_log_sink.obj $build_dir\release\core\src\default_log.obj $build_dir\release\core\src\exceptions.obj $build_dir\release\core\src\filesystem.obj $build_dir\release\core\src\id_collision_handler.obj $build_dir\release\core\src\ids.obj $build_dir\release\core\src\io_service_thread_pool.obj $build_dir\release\core\src\lifecycle.obj $build_dir\release\core\src\log.obj $build_dir\release\core\src\log_exception.obj $build_dir\release\core\src\log_expr_ops.obj $build_dir\release\core\src\log_processor.obj $build_dir\release\core\src\service_io_service.obj $build_dir\release\core\src\service_io_service_thread_pool.obj $build_dir\release\core\src\service_simple_single_thread_executor.obj $build_dir\release\core\src\stack_trace.obj $build_dir\release\core\src\time.obj $build_dir\release\core\src\void_log.obj $build_dir\release\core\src\native\vc_win\builtins.obj $build_dir\release\core\src\native\vc_win\console.obj $build_dir\release\core\src\native\vc_win\console_color.obj $build_dir\release\core\src\native\vc_win\lifecycle.obj $build_dir\release\core\src\native\vc_win\memory.obj $build_dir\release\core\src\native\vc_win\memory_status.obj $build_dir\release\core\src\native\vc_win\native.obj $build_dir\release\core\src\native\vc_win\stack_trace.obj $build_dir\release\core\src\native\vc_win\time.obj || init!
   out_file = core.lib
   flags = $lib_flags_release
build project-core-release!: phony $out_dir\core.lib
build project-core!: phony project-core-release!

build $build_dir\release\core-id\src\id.obj: cl modules\core\src\id.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-id.pdb
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_TARGET=core-id /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-id\src\namespaced_id.obj: cl modules\core\src\namespaced_id.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-id.pdb
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_TARGET=core-id /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $out_dir\core-id.lib: lib $build_dir\release\core-id\src\id.obj $build_dir\release\core-id\src\namespaced_id.obj || init!
   out_file = core-id.lib
   flags = $lib_flags_release
build project-core-id-release!: phony $out_dir\core-id.lib
build project-core-id!: phony project-core-id-release!

build $build_dir\release\core-id-with-names\src\id.obj: cl modules\core\src\id.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-id-with-names.pdb
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-id-with-names /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-id-with-names\src\namespaced_id.obj: cl modules\core\src\namespaced_id.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-id-with-names.pdb
   extra = /DBE_CORE_ID_IMPL /DBE_CORE_IMPL /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-id-with-names /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $out_dir\core-id-with-names.lib: lib $build_dir\release\core-id-with-names\src\id.obj $build_dir\release\core-id-with-names\src\namespaced_id.obj || init!
   out_file = core-id-with-names.lib
   flags = $lib_flags_release
build project-core-id-with-names-release!: phony $out_dir\core-id-with-names.lib
build project-core-id-with-names!: phony project-core-id-with-names-release!

build $build_dir\release\core-lua\src-lua\lua_id.obj: cl modules\core\src-lua\lua_id.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-lua.pdb
   extra = /DBE_CORE_LUA_IMPL /DBE_TARGET=core-lua /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-lua\src-lua\lua_logging.obj: cl modules\core\src-lua\lua_logging.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-lua.pdb
   extra = /DBE_CORE_LUA_IMPL /DBE_TARGET=core-lua /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-lua\src-lua\lua_time.obj: cl modules\core\src-lua\lua_time.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\core-lua.pdb
   extra = /DBE_CORE_LUA_IMPL /DBE_TARGET=core-lua /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $out_dir\core-lua.lib: lib $build_dir\release\core-lua\src-lua\lua_id.obj $build_dir\release\core-lua\src-lua\lua_logging.obj $build_dir\release\core-lua\src-lua\lua_time.obj || init!
   out_file = core-lua.lib
   flags = $lib_flags_release
build project-core-lua-release!: phony $out_dir\core-lua.lib
build project-core-lua!: phony project-core-lua-release!

build $build_dir\release\core-test\test\test_a3_aligned_malloc_alloc.obj: cl modules\core\test\test_a3_aligned_malloc_alloc.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_buf_alloc.obj: cl modules\core\test\test_a3_buf_alloc.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_malloc_alloc.obj: cl modules\core\test\test_a3_malloc_alloc.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_null_alloc.obj: cl modules\core\test\test_a3_null_alloc.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_static_alloc.obj: cl modules\core\test\test_a3_static_alloc.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_a3_vmm_alloc.obj: cl modules\core\test\test_a3_vmm_alloc.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_buf.obj: cl modules\core\test\test_buf.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_inline_executors.obj: cl modules\core\test\test_inline_executors.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_main.obj: cl modules\core\test\test_main.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_single_thread_executors.obj: cl modules\core\test\test_single_thread_executors.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_stack_trace.obj: cl modules\core\test\test_stack_trace.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\test_thread_pool_executors.obj: cl modules\core\test\test_thread_pool_executors.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-test\test\version.obj: cl modules\core\test\version.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\core-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-test /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\core-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\core-test.icon.res: rc $build_dir\core-test.icon.rc || init!

build $build_dir\default.manifest: putfile || init!
   contents = ^<?xml version=^"1.0^" encoding=^"UTF-8^" standalone=^"yes^"?^>&echo:$
^<assembly xmlns=^"urn:schemas-microsoft-com:asm.v1^" manifestVersion=^"1.0^"^>&echo:$
   ^<trustInfo xmlns=^"urn:schemas-microsoft-com:asm.v3^"^>&echo:$
      ^<security^>&echo:$
         ^<requestedPrivileges^>&echo:$
            ^<requestedExecutionLevel level=^"asInvoker^" uiAccess=^"false^"/^>&echo:$
         ^</requestedPrivileges^>&echo:$
      ^</security^>&echo:$
   ^</trustInfo^>&echo:$
^</assembly^>

build $build_dir\default.manifest.rc: putfile | $build_dir\default.manifest
   contents = #include ^<winuser.h^>&echo:$
1 RT_MANIFEST ^"default.manifest^"
build $build_dir\default.manifest.res: rc $build_dir\default.manifest.rc || init!

build $out_dir\core-test.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\testing.lib $build_dir\release\core-test\test\test_a3_aligned_malloc_alloc.obj $build_dir\release\core-test\test\test_a3_buf_alloc.obj $build_dir\release\core-test\test\test_a3_malloc_alloc.obj $build_dir\release\core-test\test\test_a3_null_alloc.obj $build_dir\release\core-test\test\test_a3_static_alloc.obj $build_dir\release\core-test\test\test_a3_vmm_alloc.obj $build_dir\release\core-test\test\test_buf.obj $build_dir\release\core-test\test\test_inline_executors.obj $build_dir\release\core-test\test\test_main.obj $build_dir\release\core-test\test\test_single_thread_executors.obj $build_dir\release\core-test\test\test_stack_trace.obj $build_dir\release\core-test\test\test_thread_pool_executors.obj $build_dir\release\core-test\test\version.obj $build_dir\core-test.icon.res $build_dir\default.manifest.res || init!
   out_file = core-test.exe
   pdb = $out_dir\core-test.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\core-test.exe: cp $out_dir\core-test.exe

build run-project-core-test-release!: run | $stage_dir\core-test.exe
   cmd = $stage_dir\core-test.exe
   extra =
build project-core-test-release!: phony $stage_dir\core-test.exe
build project-core-test!: phony project-core-test-release!

build $build_dir\release\core-perf\perf\perf_logging.obj: cl modules\core\perf\perf_logging.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\core-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-perf\perf\perf_main.obj: cl modules\core\perf\perf_main.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\core-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\release\core-perf\perf\version.obj: cl modules\core\perf\version.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\core-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=core-perf /DBE_TARGET_BASE=core /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\core\include"

build $build_dir\core-perf.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\core-perf.icon.res: rc $build_dir\core-perf.icon.rc || init!

build $out_dir\core-perf.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\perf.lib $out_dir\testing.lib $build_dir\release\core-perf\perf\perf_logging.obj $build_dir\release\core-perf\perf\perf_main.obj $build_dir\release\core-perf\perf\version.obj $build_dir\core-perf.icon.res $build_dir\default.manifest.res || init!
   out_file = core-perf.exe
   pdb = $out_dir\core-perf.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\core-perf.exe: cp $out_dir\core-perf.exe

build run-project-core-perf-release!: run | $stage_dir\core-perf.exe
   cmd = $stage_dir\core-perf.exe
   extra =
build project-core-perf-release!: phony $stage_dir\core-perf.exe
build project-core-perf!: phony project-core-perf-release!
build group-core-release!: phony project-core-release! project-core-id-release! project-core-id-with-names-release! project-core-lua-release! project-core-test-release! project-core-perf-release!
build group-core!: phony project-core! project-core-id! project-core-id-with-names! project-core-lua! project-core-test! project-core-perf!
build modules\ctable\include\version.hpp: limp
build modules\ctable\include\version.hpp!: limpin modules\ctable\include\version.hpp

build $build_dir\release\ctable\src\pch.obj: cl modules\ctable\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yc"pch.hpp"
build $build_dir\ctable.pch: phony $build_dir\release\ctable\src\pch.obj

build $build_dir\release\ctable\src\border_config.obj: cl modules\ctable\src\border_config.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\box_config.obj: cl modules\ctable\src\box_config.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\cell.obj: cl modules\ctable\src\cell.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\cell_renderer.obj: cl modules\ctable\src\cell_renderer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\column_sizer.obj: cl modules\ctable\src\column_sizer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\row.obj: cl modules\ctable\src\row.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\row_renderer.obj: cl modules\ctable\src\row_renderer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\row_sizer.obj: cl modules\ctable\src\row_sizer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\table.obj: cl modules\ctable\src\table.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\table_renderer.obj: cl modules\ctable\src\table_renderer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\table_sizer.obj: cl modules\ctable\src\table_sizer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $build_dir\release\ctable\src\text_renderer.obj: cl modules\ctable\src\text_renderer.cpp | $build_dir\ctable.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\ctable.pdb
   extra = /DBE_CTABLE_IMPL /DBE_TARGET=ctable /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include" /Fp"$build_dir\ctable.pch" /Yu"pch.hpp"

build $out_dir\ctable.lib: lib $build_dir\release\ctable\src\pch.obj $build_dir\release\ctable\src\border_config.obj $build_dir\release\ctable\src\box_config.obj $build_dir\release\ctable\src\cell.obj $build_dir\release\ctable\src\cell_renderer.obj $build_dir\release\ctable\src\column_sizer.obj $build_dir\release\ctable\src\row.obj $build_dir\release\ctable\src\row_renderer.obj $build_dir\release\ctable\src\row_sizer.obj $build_dir\release\ctable\src\table.obj $build_dir\release\ctable\src\table_renderer.obj $build_dir\release\ctable\src\table_sizer.obj $build_dir\release\ctable\src\text_renderer.obj || init!
   out_file = ctable.lib
   flags = $lib_flags_release
build project-ctable-release!: phony $out_dir\ctable.lib
build project-ctable!: phony project-ctable-release!

build $build_dir\release\ctable-test\test\test_ct_border_config.obj: cl modules\ctable\test\test_ct_border_config.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\ctable-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include"

build $build_dir\release\ctable-test\test\test_main.obj: cl modules\ctable\test\test_main.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\ctable-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include"

build $build_dir\release\ctable-test\test\version.obj: cl modules\ctable\test\version.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\ctable-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=ctable-test /DBE_TARGET_BASE=ctable /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\ctable\include"

build $build_dir\ctable-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\ctable-test.icon.res: rc $build_dir\ctable-test.icon.rc || init!

build $out_dir\ctable-test.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\testing.lib $build_dir\release\ctable-test\test\test_ct_border_config.obj $build_dir\release\ctable-test\test\test_main.obj $build_dir\release\ctable-test\test\version.obj $build_dir\ctable-test.icon.res $build_dir\default.manifest.res || init!
   out_file = ctable-test.exe
   pdb = $out_dir\ctable-test.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\ctable-test.exe: cp $out_dir\ctable-test.exe

build run-project-ctable-test-release!: run | $stage_dir\ctable-test.exe
   cmd = $stage_dir\ctable-test.exe
   extra =
build project-ctable-test-release!: phony $stage_dir\ctable-test.exe
build project-ctable-test!: phony project-ctable-test-release!
build group-ctable-release!: phony project-ctable-release! project-ctable-test-release!
build group-ctable!: phony project-ctable! project-ctable-test!
build modules\perf\include\version.hpp: limp
build modules\perf\include\version.hpp!: limpin modules\perf\include\version.hpp

build $build_dir\release\perf\src\pch.obj: cl modules\perf\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yc"pch.hpp"
build $build_dir\perf.pch: phony $build_dir\release\perf\src\pch.obj

build $build_dir\release\perf\src\counter.obj: cl modules\perf\src\counter.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\counter_stat.obj: cl modules\perf\src\counter_stat.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\counter_stats.obj: cl modules\perf\src\counter_stats.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\event.obj: cl modules\perf\src\event.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\event_stat.obj: cl modules\perf\src\event_stat.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\event_stats.obj: cl modules\perf\src\event_stats.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\service_stats.obj: cl modules\perf\src\service_stats.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\stats.obj: cl modules\perf\src\stats.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\timer.obj: cl modules\perf\src\timer.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\timer_stat.obj: cl modules\perf\src\timer_stat.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $build_dir\release\perf\src\timer_stats.obj: cl modules\perf\src\timer_stats.cpp | $build_dir\perf.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\perf.pdb
   extra = /DBE_PERF_IMPL /DBE_TARGET=perf /DBE_TARGET_BASE=perf /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\perf\include" /Fp"$build_dir\perf.pch" /Yu"pch.hpp"

build $out_dir\perf.lib: lib $build_dir\release\perf\src\pch.obj $build_dir\release\perf\src\counter.obj $build_dir\release\perf\src\counter_stat.obj $build_dir\release\perf\src\counter_stats.obj $build_dir\release\perf\src\event.obj $build_dir\release\perf\src\event_stat.obj $build_dir\release\perf\src\event_stats.obj $build_dir\release\perf\src\service_stats.obj $build_dir\release\perf\src\stats.obj $build_dir\release\perf\src\timer.obj $build_dir\release\perf\src\timer_stat.obj $build_dir\release\perf\src\timer_stats.obj || init!
   out_file = perf.lib
   flags = $lib_flags_release
build project-perf-release!: phony $out_dir\perf.lib
build project-perf!: phony project-perf-release!
build group-perf-release!: phony project-perf-release!
build group-perf!: phony project-perf!
build modules\platform\include\version.hpp: limp
build modules\platform\include\version.hpp!: limpin modules\platform\include\version.hpp

build $build_dir\release\platform\src\pch.obj: cl modules\platform\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\platform.pdb
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\platform\include" /Fp"$build_dir\platform.pch" /Yc"pch.hpp"
build $build_dir\platform.pch: phony $build_dir\release\platform\src\pch.obj

build $build_dir\release\platform\src\ids.obj: cl modules\platform\src\ids.cpp | $build_dir\platform.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\platform.pdb
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\platform\include" /Fp"$build_dir\platform.pch" /Yu"pch.hpp"

build $build_dir\release\platform\src\native\vc_win\lifecycle.obj: cl modules\platform\src\native\vc_win\lifecycle.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\platform.pdb
   extra = /DBE_PLATFORM_IMPL /DBE_TARGET=platform /DBE_TARGET_BASE=platform /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\platform\include"

build $out_dir\platform.lib: lib $build_dir\release\platform\src\pch.obj $build_dir\release\platform\src\ids.obj $build_dir\release\platform\src\native\vc_win\lifecycle.obj || init!
   out_file = platform.lib
   flags = $lib_flags_release
build project-platform-release!: phony $out_dir\platform.lib
build project-platform!: phony project-platform-release!
build group-platform-release!: phony project-platform-release!
build group-platform!: phony project-platform!
build modules\sqlite\include\result_code.hpp: limp
build modules\sqlite\include\result_code.hpp!: limpin modules\sqlite\include\result_code.hpp
build modules\sqlite\include\result_type.hpp: limp
build modules\sqlite\include\result_type.hpp!: limpin modules\sqlite\include\result_type.hpp
build modules\sqlite\include\transaction_type.hpp: limp
build modules\sqlite\include\transaction_type.hpp!: limpin modules\sqlite\include\transaction_type.hpp
build modules\sqlite\include\version.hpp: limp
build modules\sqlite\include\version.hpp!: limpin modules\sqlite\include\version.hpp
build modules\sqlite\src\result_code.cpp: limp
build modules\sqlite\src\result_code.cpp!: limpin modules\sqlite\src\result_code.cpp
build modules\sqlite\src\result_type.cpp: limp
build modules\sqlite\src\result_type.cpp!: limpin modules\sqlite\src\result_type.cpp
build modules\sqlite\src\transaction_type.cpp: limp
build modules\sqlite\src\transaction_type.cpp!: limpin modules\sqlite\src\transaction_type.cpp

build $build_dir\release\sqlite\src\sqlite.obj: cl modules\sqlite\src\sqlite.c || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite\src\pch.obj: cl modules\sqlite\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yc"pch.hpp"
build $build_dir\sqlite.pch: phony $build_dir\release\sqlite\src\pch.obj

build $build_dir\release\sqlite\src\db.obj: cl modules\sqlite\src\db.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\log_exception.obj: cl modules\sqlite\src\log_exception.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\queries.obj: cl modules\sqlite\src\queries.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\result_code.obj: cl modules\sqlite\src\result_code.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\result_type.obj: cl modules\sqlite\src\result_type.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\shared_stmt_cache.obj: cl modules\sqlite\src\shared_stmt_cache.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\sql_error.obj: cl modules\sqlite\src\sql_error.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\static_stmt_cache.obj: cl modules\sqlite\src\static_stmt_cache.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt.obj: cl modules\sqlite\src\stmt.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt_base.obj: cl modules\sqlite\src\stmt_base.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt_cache.obj: cl modules\sqlite\src\stmt_cache.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\stmt_proxy.obj: cl modules\sqlite\src\stmt_proxy.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\transaction.obj: cl modules\sqlite\src\transaction.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $build_dir\release\sqlite\src\transaction_type.obj: cl modules\sqlite\src\transaction_type.cpp | $build_dir\sqlite.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\sqlite.pdb
   extra = /DBE_SQLITE_IMPL /DBE_TARGET=sqlite /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include" /Fp"$build_dir\sqlite.pch" /Yu"pch.hpp"

build $out_dir\sqlite.lib: lib $build_dir\release\sqlite\src\sqlite.obj $build_dir\release\sqlite\src\pch.obj $build_dir\release\sqlite\src\db.obj $build_dir\release\sqlite\src\log_exception.obj $build_dir\release\sqlite\src\queries.obj $build_dir\release\sqlite\src\result_code.obj $build_dir\release\sqlite\src\result_type.obj $build_dir\release\sqlite\src\shared_stmt_cache.obj $build_dir\release\sqlite\src\sql_error.obj $build_dir\release\sqlite\src\static_stmt_cache.obj $build_dir\release\sqlite\src\stmt.obj $build_dir\release\sqlite\src\stmt_base.obj $build_dir\release\sqlite\src\stmt_cache.obj $build_dir\release\sqlite\src\stmt_proxy.obj $build_dir\release\sqlite\src\transaction.obj $build_dir\release\sqlite\src\transaction_type.obj || init!
   out_file = sqlite.lib
   flags = $lib_flags_release
build project-sqlite-release!: phony $out_dir\sqlite.lib
build project-sqlite!: phony project-sqlite-release!

build $build_dir\release\sqlite-test\test\test_db.obj: cl modules\sqlite\test\test_db.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_main.obj: cl modules\sqlite\test\test_main.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_shared_stmt_cache.obj: cl modules\sqlite\test\test_shared_stmt_cache.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_static_stmt_cache.obj: cl modules\sqlite\test\test_static_stmt_cache.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_stmt.obj: cl modules\sqlite\test\test_stmt.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\test_transaction.obj: cl modules\sqlite\test\test_transaction.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\release\sqlite-test\test\version.obj: cl modules\sqlite\test\version.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\sqlite-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=sqlite-test /DBE_TARGET_BASE=sqlite /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\sqlite\include"

build $build_dir\sqlite-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\sqlite-test.icon.res: rc $build_dir\sqlite-test.icon.rc || init!

build $out_dir\sqlite-test.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\sqlite.lib $out_dir\testing.lib $build_dir\release\sqlite-test\test\test_db.obj $build_dir\release\sqlite-test\test\test_main.obj $build_dir\release\sqlite-test\test\test_shared_stmt_cache.obj $build_dir\release\sqlite-test\test\test_static_stmt_cache.obj $build_dir\release\sqlite-test\test\test_stmt.obj $build_dir\release\sqlite-test\test\test_transaction.obj $build_dir\release\sqlite-test\test\version.obj $build_dir\sqlite-test.icon.res $build_dir\default.manifest.res || init!
   out_file = sqlite-test.exe
   pdb = $out_dir\sqlite-test.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\sqlite-test.exe: cp $out_dir\sqlite-test.exe

build run-project-sqlite-test-release!: run | $stage_dir\sqlite-test.exe
   cmd = $stage_dir\sqlite-test.exe
   extra =
build project-sqlite-test-release!: phony $stage_dir\sqlite-test.exe
build project-sqlite-test!: phony project-sqlite-test-release!
build group-sqlite-release!: phony project-sqlite-release! project-sqlite-test-release!
build group-sqlite!: phony project-sqlite! project-sqlite-test!
build modules\testing\include\version.hpp: limp
build modules\testing\include\version.hpp!: limpin modules\testing\include\version.hpp

build $build_dir\release\testing\src\pch.obj: cl modules\testing\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\testing.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=testing /DBE_TARGET_BASE=testing /DBE_TESTING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\testing\include"

build $out_dir\testing.lib: lib $build_dir\release\testing\src\pch.obj || init!
   out_file = testing.lib
   flags = $lib_flags_release
build project-testing-release!: phony $out_dir\testing.lib
build project-testing!: phony project-testing-release!

build $build_dir\release\testing-test\test\test_arbitrary.obj: cl modules\testing\test\test_arbitrary.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\testing-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\testing\include"

build $build_dir\release\testing-test\test\test_main.obj: cl modules\testing\test\test_main.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\testing-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\testing\include"

build $build_dir\release\testing-test\test\version.obj: cl modules\testing\test\version.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\testing-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=testing-test /DBE_TARGET_BASE=testing /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\testing\include"

build $build_dir\testing-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\testing-test.icon.res: rc $build_dir\testing-test.icon.rc || init!

build $out_dir\testing-test.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\testing.lib $out_dir\util.lib $build_dir\release\testing-test\test\test_arbitrary.obj $build_dir\release\testing-test\test\test_main.obj $build_dir\release\testing-test\test\version.obj $build_dir\testing-test.icon.res $build_dir\default.manifest.res || init!
   out_file = testing-test.exe
   pdb = $out_dir\testing-test.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\testing-test.exe: cp $out_dir\testing-test.exe

build run-project-testing-test-release!: run | $stage_dir\testing-test.exe
   cmd = $stage_dir\testing-test.exe
   extra =
build project-testing-test-release!: phony $stage_dir\testing-test.exe
build project-testing-test!: phony project-testing-test-release!
build group-testing-release!: phony project-testing-release! project-testing-test-release!
build group-testing!: phony project-testing! project-testing-test!
build modules\util\include\parse_string_error_condition.hpp: limp
build modules\util\include\parse_string_error_condition.hpp!: limpin modules\util\include\parse_string_error_condition.hpp
build modules\util\include\version.hpp: limp
build modules\util\include\version.hpp!: limpin modules\util\include\version.hpp
build modules\util\include\zlib_result_code.hpp: limp
build modules\util\include\zlib_result_code.hpp!: limpin modules\util\include\zlib_result_code.hpp

build $build_dir\release\util\src\pch.obj: cl modules\util\src\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util.pdb
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util.pch" /Yc"pch.hpp"
build $build_dir\util.pch: phony $build_dir\release\util\src\pch.obj

build $build_dir\release\util\src\fnv.obj: cl modules\util\src\fnv.cpp | $build_dir\util.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util.pdb
   extra = /DBE_TARGET=util /DBE_TARGET_BASE=util /DBE_UTIL_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util.pch" /Yu"pch.hpp"

build $out_dir\util.lib: lib $build_dir\release\util\src\pch.obj $build_dir\release\util\src\fnv.obj || init!
   out_file = util.lib
   flags = $lib_flags_release
build project-util-release!: phony $out_dir\util.lib
build project-util!: phony project-util-release!
build modules\util\src-compression\zlib_result_code.cpp: limp
build modules\util\src-compression\zlib_result_code.cpp!: limpin modules\util\src-compression\zlib_result_code.cpp

build $build_dir\release\util-compression\src-compression\pch.obj: cl modules\util\src-compression\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-compression.pdb
   extra = /DBE_TARGET=util-compression /DBE_TARGET_BASE=util /DBE_UTIL_COMPRESSION_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-compression.pch" /Yc"pch.hpp"
build $build_dir\util-compression.pch: phony $build_dir\release\util-compression\src-compression\pch.obj

build $build_dir\release\util-compression\src-compression\zlib.obj: cl modules\util\src-compression\zlib.cpp | $build_dir\util-compression.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-compression.pdb
   extra = /DBE_TARGET=util-compression /DBE_TARGET_BASE=util /DBE_UTIL_COMPRESSION_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-compression.pch" /Yu"pch.hpp"

build $build_dir\release\util-compression\src-compression\zlib_result_code.obj: cl modules\util\src-compression\zlib_result_code.cpp | $build_dir\util-compression.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-compression.pdb
   extra = /DBE_TARGET=util-compression /DBE_TARGET_BASE=util /DBE_UTIL_COMPRESSION_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-compression.pch" /Yu"pch.hpp"

build $out_dir\util-compression.lib: lib $build_dir\release\util-compression\src-compression\pch.obj $build_dir\release\util-compression\src-compression\zlib.obj $build_dir\release\util-compression\src-compression\zlib_result_code.obj || init!
   out_file = util-compression.lib
   flags = $lib_flags_release
build project-util-compression-release!: phony $out_dir\util-compression.lib
build project-util-compression!: phony project-util-compression-release!

build $build_dir\release\util-prng\src-prng\pch.obj: cl modules\util\src-prng\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-prng.pdb
   extra = /DBE_TARGET=util-prng /DBE_TARGET_BASE=util /DBE_UTIL_PRNG_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-prng.pch" /Yc"pch.hpp"
build $build_dir\util-prng.pch: phony $build_dir\release\util-prng\src-prng\pch.obj

build $build_dir\release\util-prng\src-prng\service_split_mix_64.obj: cl modules\util\src-prng\service_split_mix_64.cpp | $build_dir\util-prng.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-prng.pdb
   extra = /DBE_TARGET=util-prng /DBE_TARGET_BASE=util /DBE_UTIL_PRNG_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-prng.pch" /Yu"pch.hpp"

build $build_dir\release\util-prng\src-prng\service_xoroshiro_128_plus.obj: cl modules\util\src-prng\service_xoroshiro_128_plus.cpp | $build_dir\util-prng.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-prng.pdb
   extra = /DBE_TARGET=util-prng /DBE_TARGET_BASE=util /DBE_UTIL_PRNG_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-prng.pch" /Yu"pch.hpp"

build $build_dir\release\util-prng\src-prng\service_xorshift_1024_star.obj: cl modules\util\src-prng\service_xorshift_1024_star.cpp | $build_dir\util-prng.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-prng.pdb
   extra = /DBE_TARGET=util-prng /DBE_TARGET_BASE=util /DBE_UTIL_PRNG_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-prng.pch" /Yu"pch.hpp"

build $build_dir\release\util-prng\src-prng\service_xorshift_128_plus.obj: cl modules\util\src-prng\service_xorshift_128_plus.cpp | $build_dir\util-prng.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-prng.pdb
   extra = /DBE_TARGET=util-prng /DBE_TARGET_BASE=util /DBE_UTIL_PRNG_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-prng.pch" /Yu"pch.hpp"

build $out_dir\util-prng.lib: lib $build_dir\release\util-prng\src-prng\pch.obj $build_dir\release\util-prng\src-prng\service_split_mix_64.obj $build_dir\release\util-prng\src-prng\service_xoroshiro_128_plus.obj $build_dir\release\util-prng\src-prng\service_xorshift_1024_star.obj $build_dir\release\util-prng\src-prng\service_xorshift_128_plus.obj || init!
   out_file = util-prng.lib
   flags = $lib_flags_release
build project-util-prng-release!: phony $out_dir\util-prng.lib
build project-util-prng!: phony project-util-prng-release!
build modules\util\src-string\parse_string_error_condition.cpp: limp
build modules\util\src-string\parse_string_error_condition.cpp!: limpin modules\util\src-string\parse_string_error_condition.cpp

build $build_dir\release\util-string\src-string\pch.obj: cl modules\util\src-string\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-string.pch" /Yc"pch.hpp"
build $build_dir\util-string.pch: phony $build_dir\release\util-string\src-string\pch.obj

build $build_dir\release\util-string\src-string\binary_units.obj: cl modules\util\src-string\binary_units.cpp | $build_dir\util-string.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-string.pch" /Yu"pch.hpp"

build $build_dir\release\util-string\src-string\parse_string_error_condition.obj: cl modules\util\src-string\parse_string_error_condition.cpp | $build_dir\util-string.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-string.pch" /Yu"pch.hpp"

build $build_dir\release\util-string\src-string\pointer_to_string.obj: cl modules\util\src-string\pointer_to_string.cpp | $build_dir\util-string.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-string.pch" /Yu"pch.hpp"

build $build_dir\release\util-string\src-string\utf8_codepoint.obj: cl modules\util\src-string\utf8_codepoint.cpp | $build_dir\util-string.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-string.pch" /Yu"pch.hpp"

build $build_dir\release\util-string\src-string\utf8_iterator.obj: cl modules\util\src-string\utf8_iterator.cpp | $build_dir\util-string.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-string.pch" /Yu"pch.hpp"

build $build_dir\release\util-string\src-string\native\vc_win\utf16_widen_narrow.obj: cl modules\util\src-string\native\vc_win\utf16_widen_narrow.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-string.pdb
   extra = /DBE_TARGET=util-string /DBE_TARGET_BASE=util /DBE_UTIL_STRING_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $out_dir\util-string.lib: lib $build_dir\release\util-string\src-string\pch.obj $build_dir\release\util-string\src-string\binary_units.obj $build_dir\release\util-string\src-string\parse_string_error_condition.obj $build_dir\release\util-string\src-string\pointer_to_string.obj $build_dir\release\util-string\src-string\utf8_codepoint.obj $build_dir\release\util-string\src-string\utf8_iterator.obj $build_dir\release\util-string\src-string\native\vc_win\utf16_widen_narrow.obj || init!
   out_file = util-string.lib
   flags = $lib_flags_release
build project-util-string-release!: phony $out_dir\util-string.lib
build project-util-string!: phony project-util-string-release!

build $build_dir\release\util-fs\src-fs\pch.obj: cl modules\util\src-fs\pch.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-fs.pdb
   extra = /DBE_TARGET=util-fs /DBE_TARGET_BASE=util /DBE_UTIL_FS_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-fs.pch" /Yc"pch.hpp"
build $build_dir\util-fs.pch: phony $build_dir\release\util-fs\src-fs\pch.obj

build $build_dir\release\util-fs\src-fs\get_file_contents.obj: cl modules\util\src-fs\get_file_contents.cpp | $build_dir\util-fs.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-fs.pdb
   extra = /DBE_TARGET=util-fs /DBE_TARGET_BASE=util /DBE_UTIL_FS_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-fs.pch" /Yu"pch.hpp"

build $build_dir\release\util-fs\src-fs\path_glob.obj: cl modules\util\src-fs\path_glob.cpp | $build_dir\util-fs.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-fs.pdb
   extra = /DBE_TARGET=util-fs /DBE_TARGET_BASE=util /DBE_UTIL_FS_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-fs.pch" /Yu"pch.hpp"

build $build_dir\release\util-fs\src-fs\paths.obj: cl modules\util\src-fs\paths.cpp | $build_dir\util-fs.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-fs.pdb
   extra = /DBE_TARGET=util-fs /DBE_TARGET_BASE=util /DBE_UTIL_FS_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-fs.pch" /Yu"pch.hpp"

build $build_dir\release\util-fs\src-fs\put_file_contents.obj: cl modules\util\src-fs\put_file_contents.cpp | $build_dir\util-fs.pch || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-fs.pdb
   extra = /DBE_TARGET=util-fs /DBE_TARGET_BASE=util /DBE_UTIL_FS_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include" /Fp"$build_dir\util-fs.pch" /Yu"pch.hpp"

build $build_dir\release\util-fs\src-fs\native\vc_win\paths.obj: cl modules\util\src-fs\native\vc_win\paths.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-fs.pdb
   extra = /DBE_TARGET=util-fs /DBE_TARGET_BASE=util /DBE_UTIL_FS_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $out_dir\util-fs.lib: lib $build_dir\release\util-fs\src-fs\pch.obj $build_dir\release\util-fs\src-fs\get_file_contents.obj $build_dir\release\util-fs\src-fs\path_glob.obj $build_dir\release\util-fs\src-fs\paths.obj $build_dir\release\util-fs\src-fs\put_file_contents.obj $build_dir\release\util-fs\src-fs\native\vc_win\paths.obj || init!
   out_file = util-fs.lib
   flags = $lib_flags_release
build project-util-fs-release!: phony $out_dir\util-fs.lib
build project-util-fs!: phony project-util-fs-release!

build $build_dir\release\util-lua\src-lua\lua_fnv256.obj: cl modules\util\src-lua\lua_fnv256.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-lua.pdb
   extra = /DBE_TARGET=util-lua /DBE_TARGET_BASE=util /DBE_UTIL_LUA_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-lua\src-lua\lua_fs.obj: cl modules\util\src-lua\lua_fs.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-lua.pdb
   extra = /DBE_TARGET=util-lua /DBE_TARGET_BASE=util /DBE_UTIL_LUA_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-lua\src-lua\lua_interpolate_string.obj: cl modules\util\src-lua\lua_interpolate_string.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-lua.pdb
   extra = /DBE_TARGET=util-lua /DBE_TARGET_BASE=util /DBE_UTIL_LUA_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-lua\src-lua\lua_util.obj: cl modules\util\src-lua\lua_util.cpp || init!
   flags = $cl_flags_lib_release
   pdb = $build_dir\util-lua.pdb
   extra = /DBE_TARGET=util-lua /DBE_TARGET_BASE=util /DBE_UTIL_LUA_IMPL /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $out_dir\util-lua.lib: lib $build_dir\release\util-lua\src-lua\lua_fnv256.obj $build_dir\release\util-lua\src-lua\lua_fs.obj $build_dir\release\util-lua\src-lua\lua_interpolate_string.obj $build_dir\release\util-lua\src-lua\lua_util.obj || init!
   out_file = util-lua.lib
   flags = $lib_flags_release
build project-util-lua-release!: phony $out_dir\util-lua.lib
build project-util-lua!: phony project-util-lua-release!

build $build_dir\release\util-test\test\test_base64.obj: cl modules\util\test\test_base64.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_binary_units.obj: cl modules\util\test\test_binary_units.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_chunked_list.obj: cl modules\util\test\test_chunked_list.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_interpolate_string.obj: cl modules\util\test\test_interpolate_string.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_main.obj: cl modules\util\test\test_main.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_split_mix_64.obj: cl modules\util\test\test_split_mix_64.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_utf8_iterator.obj: cl modules\util\test\test_utf8_iterator.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_xoroshiro_128_plus.obj: cl modules\util\test\test_xoroshiro_128_plus.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_xorshift_1024_star.obj: cl modules\util\test\test_xorshift_1024_star.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\test_xorshift_128_plus.obj: cl modules\util\test\test_xorshift_128_plus.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-test\test\version.obj: cl modules\util\test\version.cpp || init!
   flags = $cl_flags_test_release
   pdb = $build_dir\util-test.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-test /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\util-test.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\util-test.icon.res: rc $build_dir\util-test.icon.rc || init!

build $out_dir\util-test.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\testing.lib $out_dir\util.lib $build_dir\release\util-test\test\test_base64.obj $build_dir\release\util-test\test\test_binary_units.obj $build_dir\release\util-test\test\test_chunked_list.obj $build_dir\release\util-test\test\test_interpolate_string.obj $build_dir\release\util-test\test\test_main.obj $build_dir\release\util-test\test\test_split_mix_64.obj $build_dir\release\util-test\test\test_utf8_iterator.obj $build_dir\release\util-test\test\test_xoroshiro_128_plus.obj $build_dir\release\util-test\test\test_xorshift_1024_star.obj $build_dir\release\util-test\test\test_xorshift_128_plus.obj $build_dir\release\util-test\test\version.obj $build_dir\util-test.icon.res $build_dir\default.manifest.res || init!
   out_file = util-test.exe
   pdb = $out_dir\util-test.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\util-test.exe: cp $out_dir\util-test.exe

build run-project-util-test-release!: run | $stage_dir\util-test.exe
   cmd = $stage_dir\util-test.exe
   extra =
build project-util-test-release!: phony $stage_dir\util-test.exe
build project-util-test!: phony project-util-test-release!

build $build_dir\release\util-perf\perf\associative_containers.obj: cl modules\util\perf\associative_containers.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\util-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-perf\perf\perf_main.obj: cl modules\util\perf\perf_main.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\util-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-perf\perf\sequence_containers.obj: cl modules\util\perf\sequence_containers.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\util-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\release\util-perf\perf\version.obj: cl modules\util\perf\version.cpp || init!
   flags = $cl_flags_perf_release
   pdb = $build_dir\util-perf.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=util-perf /DBE_TARGET_BASE=util /DZLIB_CONST /DZ_SOLO /I"include" /I"modules\util\include"

build $build_dir\util-perf.icon.rc: putfile | icon\bengine-test-perf.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-test-perf.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-test-perf.ico^"
build $build_dir\util-perf.icon.res: rc $build_dir\util-perf.icon.rc || init!

build $out_dir\util-perf.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\testing.lib $out_dir\util.lib $build_dir\release\util-perf\perf\associative_containers.obj $build_dir\release\util-perf\perf\perf_main.obj $build_dir\release\util-perf\perf\sequence_containers.obj $build_dir\release\util-perf\perf\version.obj $build_dir\util-perf.icon.res $build_dir\default.manifest.res || init!
   out_file = util-perf.exe
   pdb = $out_dir\util-perf.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\util-perf.exe: cp $out_dir\util-perf.exe

build run-project-util-perf-release!: run | $stage_dir\util-perf.exe
   cmd = $stage_dir\util-perf.exe
   extra =
build project-util-perf-release!: phony $stage_dir\util-perf.exe
build project-util-perf!: phony project-util-perf-release!
build group-util-release!: phony project-util-release! project-util-compression-release! project-util-prng-release! project-util-string-release! project-util-fs-release! project-util-lua-release! project-util-test-release! project-util-perf-release!
build group-util!: phony project-util! project-util-compression! project-util-prng! project-util-string! project-util-fs! project-util-lua! project-util-test! project-util-perf!
build tools\bltc\include\version.hpp: limp
build tools\bltc\include\version.hpp!: limpin tools\bltc\include\version.hpp

build $build_dir\release\bltc\src\bltc.obj: cl tools\bltc\src\bltc.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\bltc.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=bltc /DBE_TARGET_BASE=bltc /DZLIB_CONST /DZ_SOLO /I"include" /I"tools\bltc\include"

build $build_dir\release\bltc\src\bltc_app.obj: cl tools\bltc\src\bltc_app.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\bltc.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=bltc /DBE_TARGET_BASE=bltc /DZLIB_CONST /DZ_SOLO /I"include" /I"tools\bltc\include"

build $build_dir\bltc.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"
build $build_dir\bltc.icon.res: rc $build_dir\bltc.icon.rc || init!

build $out_dir\bltc.exe: link $ext_lib_dir\zlib-static.lib $out_dir\blt.lib $out_dir\cli.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\ctable.lib $out_dir\util-compression.lib $out_dir\util-fs.lib $out_dir\util-prng.lib $out_dir\util-string.lib $out_dir\util.lib $build_dir\release\bltc\src\bltc.obj $build_dir\release\bltc\src\bltc_app.obj $build_dir\bltc.icon.res $build_dir\default.manifest.res || init!
   out_file = bltc.exe
   pdb = $out_dir\bltc.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\bltc.exe: cp $out_dir\bltc.exe
build project-bltc-release!: phony $stage_dir\bltc.exe
build project-bltc!: phony project-bltc-release!
build group-bltc-release!: phony project-bltc-release!
build group-bltc!: phony project-bltc!
build tools\limp\include\limp_lua.hpp: limp
build tools\limp\include\limp_lua.hpp!: limpin tools\limp\include\limp_lua.hpp
build tools\limp\include\version.hpp: limp
build tools\limp\include\version.hpp!: limpin tools\limp\include\version.hpp

build $build_dir\release\limp\src\limp.obj: cl tools\limp\src\limp.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\limp.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=limp /DBE_TARGET_BASE=limp /DZLIB_CONST /DZ_SOLO /I"include" /I"tools\limp\include"

build $build_dir\release\limp\src\limp_app.obj: cl tools\limp\src\limp_app.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\limp.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=limp /DBE_TARGET_BASE=limp /DZLIB_CONST /DZ_SOLO /I"include" /I"tools\limp\include"

build $build_dir\release\limp\src\limp_processor.obj: cl tools\limp\src\limp_processor.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\limp.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=limp /DBE_TARGET_BASE=limp /DZLIB_CONST /DZ_SOLO /I"include" /I"tools\limp\include"

build $build_dir\limp.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"
build $build_dir\limp.icon.res: rc $build_dir\limp.icon.rc || init!

build $out_dir\limp.exe: link $ext_lib_dir\luaxx.lib $ext_lib_dir\zlib-static.lib $out_dir\belua.lib $out_dir\blt-lua.lib $out_dir\blt.lib $out_dir\cli.lib $out_dir\core-id-with-names.lib $out_dir\core-lua.lib $out_dir\core.lib $out_dir\ctable.lib $out_dir\util-compression.lib $out_dir\util-fs.lib $out_dir\util-lua.lib $out_dir\util-prng.lib $out_dir\util.lib $build_dir\release\limp\src\limp.obj $build_dir\release\limp\src\limp_app.obj $build_dir\release\limp\src\limp_processor.obj $build_dir\limp.icon.res $build_dir\default.manifest.res || init!
   out_file = limp.exe
   pdb = $out_dir\limp.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\limp.exe: cp $out_dir\limp.exe
build project-limp-release!: phony $stage_dir\limp.exe
build project-limp!: phony project-limp-release!
build group-limp-release!: phony project-limp-release!
build group-limp!: phony project-limp!
build tools\misc\src-idgen\format.cpp: limp
build tools\misc\src-idgen\format.cpp!: limpin tools\misc\src-idgen\format.cpp
build tools\misc\src-idgen\mode.cpp: limp
build tools\misc\src-idgen\mode.cpp!: limpin tools\misc\src-idgen\mode.cpp
build tools\misc\src-idgen\type.cpp: limp
build tools\misc\src-idgen\type.cpp!: limpin tools\misc\src-idgen\type.cpp
build tools\misc\src-idgen\format.hpp: limp
build tools\misc\src-idgen\format.hpp!: limpin tools\misc\src-idgen\format.hpp
build tools\misc\src-idgen\mode.hpp: limp
build tools\misc\src-idgen\mode.hpp!: limpin tools\misc\src-idgen\mode.hpp
build tools\misc\src-idgen\type.hpp: limp
build tools\misc\src-idgen\type.hpp!: limpin tools\misc\src-idgen\type.hpp
build tools\misc\src-idgen\version.hpp: limp
build tools\misc\src-idgen\version.hpp!: limpin tools\misc\src-idgen\version.hpp

build $build_dir\release\idgen\src-idgen\format.obj: cl tools\misc\src-idgen\format.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\idgen.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\release\idgen\src-idgen\idgen.obj: cl tools\misc\src-idgen\idgen.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\idgen.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\release\idgen\src-idgen\idgen_app.obj: cl tools\misc\src-idgen\idgen_app.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\idgen.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\release\idgen\src-idgen\mode.obj: cl tools\misc\src-idgen\mode.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\idgen.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\release\idgen\src-idgen\type.obj: cl tools\misc\src-idgen\type.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\idgen.pdb
   extra = /DBE_ID_NAMES_ENABLED /DBE_TARGET=idgen /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\idgen.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"
build $build_dir\idgen.icon.res: rc $build_dir\idgen.icon.rc || init!

build $out_dir\idgen.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id-with-names.lib $out_dir\core.lib $out_dir\util-compression.lib $out_dir\util-fs.lib $out_dir\util-prng.lib $build_dir\release\idgen\src-idgen\format.obj $build_dir\release\idgen\src-idgen\idgen.obj $build_dir\release\idgen\src-idgen\idgen_app.obj $build_dir\release\idgen\src-idgen\mode.obj $build_dir\release\idgen\src-idgen\type.obj $build_dir\idgen.icon.res $build_dir\default.manifest.res || init!
   out_file = idgen.exe
   pdb = $out_dir\idgen.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\idgen.exe: cp $out_dir\idgen.exe
build project-idgen-release!: phony $stage_dir\idgen.exe
build project-idgen!: phony project-idgen-release!
build tools\misc\src-sizeof\version.hpp: limp
build tools\misc\src-sizeof\version.hpp!: limpin tools\misc\src-sizeof\version.hpp

build $build_dir\release\sizeof\src-sizeof\size_of_type.obj: cl tools\misc\src-sizeof\size_of_type.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\sizeof.pdb
   extra = /DBE_TARGET=sizeof /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\release\sizeof\src-sizeof\sizeof.obj: cl tools\misc\src-sizeof\sizeof.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\sizeof.pdb
   extra = /DBE_TARGET=sizeof /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\sizeof.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"
build $build_dir\sizeof.icon.res: rc $build_dir\sizeof.icon.rc || init!

build $out_dir\sizeof.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id.lib $out_dir\core.lib $out_dir\util.lib $build_dir\release\sizeof\src-sizeof\size_of_type.obj $build_dir\release\sizeof\src-sizeof\sizeof.obj $build_dir\sizeof.icon.res $build_dir\default.manifest.res || init!
   out_file = sizeof.exe
   pdb = $out_dir\sizeof.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\sizeof.exe: cp $out_dir\sizeof.exe
build project-sizeof-release!: phony $stage_dir\sizeof.exe
build project-sizeof!: phony project-sizeof-release!
build tools\misc\src-ccolor\version.hpp: limp
build tools\misc\src-ccolor\version.hpp!: limpin tools\misc\src-ccolor\version.hpp

build $build_dir\release\ccolor\src-ccolor\ccolor.obj: cl tools\misc\src-ccolor\ccolor.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\ccolor.pdb
   extra = /DBE_TARGET=ccolor /DBE_TARGET_BASE=tools-misc /DZLIB_CONST /DZ_SOLO /I"include"

build $build_dir\ccolor.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"
build $build_dir\ccolor.icon.res: rc $build_dir\ccolor.icon.rc || init!

build $out_dir\ccolor.exe: link $ext_lib_dir\zlib-static.lib $out_dir\core-id.lib $out_dir\core.lib $build_dir\release\ccolor\src-ccolor\ccolor.obj $build_dir\ccolor.icon.res $build_dir\default.manifest.res || init!
   out_file = ccolor.exe
   pdb = $out_dir\ccolor.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\ccolor.exe: cp $out_dir\ccolor.exe
build project-ccolor-release!: phony $stage_dir\ccolor.exe
build project-ccolor!: phony project-ccolor-release!

build $build_dir\release\wedo\src-wedo\wedo.obj: cl tools\misc\src-wedo\wedo.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\wedo.pdb
   extra = /DBE_TARGET=wedo /DBE_TARGET_BASE=tools-misc /I"include"

build $build_dir\wedo.icon.rc: putfile | icon\bengine-warm.ico || init!
   contents = 101 ICON ^"icon^\^\bengine-warm.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine-warm.ico^"
build $build_dir\wedo.icon.res: rc $build_dir\wedo.icon.rc || init!

build $build_dir\elevated.manifest: putfile || init!
   contents = ^<?xml version=^"1.0^" encoding=^"UTF-8^" standalone=^"yes^"?^>&echo:$
^<assembly xmlns=^"urn:schemas-microsoft-com:asm.v1^" manifestVersion=^"1.0^"^>&echo:$
   ^<trustInfo xmlns=^"urn:schemas-microsoft-com:asm.v3^"^>&echo:$
      ^<security^>&echo:$
         ^<requestedPrivileges^>&echo:$
            ^<requestedExecutionLevel level=^"requireAdministrator^" uiAccess=^"false^"/^>&echo:$
         ^</requestedPrivileges^>&echo:$
      ^</security^>&echo:$
   ^</trustInfo^>&echo:$
^</assembly^>

build $build_dir\elevated.manifest.rc: putfile | $build_dir\elevated.manifest
   contents = #include ^<winuser.h^>&echo:$
1 RT_MANIFEST ^"elevated.manifest^"
build $build_dir\elevated.manifest.res: rc $build_dir\elevated.manifest.rc || init!

build $out_dir\wedo.exe: link $build_dir\release\wedo\src-wedo\wedo.obj $build_dir\wedo.icon.res $build_dir\elevated.manifest.res || init!
   out_file = wedo.exe
   pdb = $out_dir\wedo.pdb
   flags = $link_flags_console_release
   extra =
build $stage_dir\wedo.exe: cp $out_dir\wedo.exe
build project-wedo-release!: phony $stage_dir\wedo.exe
build project-wedo!: phony project-wedo-release!
build group-tools-misc-release!: phony project-idgen-release! project-sizeof-release! project-ccolor-release! project-wedo-release!
build group-tools-misc!: phony project-idgen! project-sizeof! project-ccolor! project-wedo!

build $build_dir\release\omicron\src\omicron.obj: cl demos\omicron\src\omicron.cpp || init!
   flags = $cl_flags_release
   pdb = $build_dir\omicron.pdb
   extra = /DBE_TARGET=omicron /DBE_TARGET_BASE=omicron /DGLEW_NO_GLU /DGLEW_STATIC /DZLIB_CONST /DZ_SOLO /I"demos\omicron\include" /I"include"

build $build_dir\omicron.icon.rc: putfile | icon\bengine.ico || init!
   contents = 101 ICON ^"icon^\^\bengine.ico^"&echo:$
GLFW_ICON ICON ^"icon^\^\bengine.ico^"
build $build_dir\omicron.icon.res: rc $build_dir\omicron.icon.rc || init!

build $out_dir\omicron.exe: link $ext_lib_dir\glew.lib $ext_lib_dir\glfw.lib $ext_lib_dir\zlib-static.lib $out_dir\core-id.lib $out_dir\core.lib $out_dir\platform.lib $out_dir\util-compression.lib $out_dir\util-fs.lib $out_dir\util-prng.lib $build_dir\release\omicron\src\omicron.obj $build_dir\omicron.icon.res $build_dir\default.manifest.res || init!
   out_file = omicron.exe
   pdb = $out_dir\omicron.pdb
   flags = $link_flags_console_release
   extra = opengl32.lib
build $stage_dir\omicron.exe: cp $out_dir\omicron.exe
build project-omicron-release!: phony $stage_dir\omicron.exe
build project-omicron!: phony project-omicron-release!
build group-omicron-release!: phony project-omicron-release!
build group-omicron!: phony project-omicron!
build all-release!: phony group-deps-release! group-belua-release! group-blt-release! group-cli-release! group-core-release! group-ctable-release! group-perf-release! group-platform-release! group-sqlite-release! group-testing-release! group-util-release! group-bltc-release! group-limp-release! group-tools-misc-release! group-omicron-release!
build all!: phony group-deps! group-belua! group-blt! group-cli! group-core! group-ctable! group-perf! group-platform! group-sqlite! group-testing! group-util! group-bltc! group-limp! group-tools-misc! group-omicron!
build externals!: phony $ext_lib_dir\zlib-static.lib $ext_lib_dir\glew.lib $ext_lib_dir\glfw.lib $ext_lib_dir\luaxx.lib
build limp!: phony modules\belua\include\result_code.hpp! modules\belua\include\version.hpp! modules\belua\src\result_code.cpp! modules\blt\include\version.hpp! modules\blt\src-lua\lua_blt.cpp! modules\cli\include\section_ids.hpp! modules\cli\include\version.hpp! modules\core\include\log_attrib_ids.hpp! modules\core\include\service_ids.hpp! modules\core\include\version.hpp! modules\ctable\include\version.hpp! modules\perf\include\version.hpp! modules\platform\include\version.hpp! modules\sqlite\include\result_code.hpp! modules\sqlite\include\result_type.hpp! modules\sqlite\include\transaction_type.hpp! modules\sqlite\include\version.hpp! modules\sqlite\src\result_code.cpp! modules\sqlite\src\result_type.cpp! modules\sqlite\src\transaction_type.cpp! modules\testing\include\version.hpp! modules\util\include\parse_string_error_condition.hpp! modules\util\include\version.hpp! modules\util\include\zlib_result_code.hpp! modules\util\src-compression\zlib_result_code.cpp! modules\util\src-string\parse_string_error_condition.cpp! tools\bltc\include\version.hpp! tools\limp\include\limp_lua.hpp! tools\limp\include\version.hpp! tools\misc\src-idgen\format.cpp! tools\misc\src-idgen\mode.cpp! tools\misc\src-idgen\type.cpp! tools\misc\src-idgen\format.hpp! tools\misc\src-idgen\mode.hpp! tools\misc\src-idgen\type.hpp! tools\misc\src-idgen\version.hpp! tools\misc\src-sizeof\version.hpp! tools\misc\src-ccolor\version.hpp!
build run-perf-release!: phony run-project-core-perf-release! run-project-util-perf-release!
build run-test-release!: phony run-project-core-test-release! run-project-ctable-test-release! run-project-sqlite-test-release! run-project-testing-test-release! run-project-util-test-release!
build pdb!: phony

default all!

# ######################### END OF GENERATED CODE ######################### ##

